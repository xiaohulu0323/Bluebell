# --- Build stage ---
FROM golang:1.24-alpine AS builder
WORKDIR /app
# Install build deps
RUN apk add --no-cache git ca-certificates tzdata build-base
# Cache go mod
COPY go.mod go.sum ./
RUN go mod download
# Copy source
COPY . .
# Build
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o bluebell ./

# --- Runtime stage ---
FROM alpine:3.20
WORKDIR /app
RUN apk add --no-cache ca-certificates tzdata bash curl
COPY --from=builder /app/bluebell /app/bluebell
COPY --from=builder /app/conf /app/conf
COPY wait-for.sh /app/wait-for.sh
RUN chmod +x /app/wait-for.sh /app/bluebell
EXPOSE 8081
CMD ["/app/bluebell", "./conf/config.yaml"]
